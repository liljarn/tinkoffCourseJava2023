package edu.hw6.task5;

import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import java.util.stream.Stream;
import static edu.hw6.task5.HackerNews.hackerNewsTopStories;
import static edu.hw6.task5.HackerNews.news;
import static org.assertj.core.api.Assertions.assertThat;

public class HackerNewsTest {
    private final long[]
        newsNums =
        {38257794, 38257094, 38252566, 38256137, 38257284, 38248497, 38251957, 38256810, 38258101, 38250913, 38257499,
            38256478, 38249742, 38251842, 38258406, 38251330, 38257024, 38252947, 38248752, 38249708, 38249515,
            38249473, 38257049, 38252449, 38250001, 38254353, 38250114, 38251935, 38251032, 38252963, 38249214,
            38254153, 38254835, 38248422, 38248532, 38253384, 38248421, 38255004, 38254656, 38247964, 38247234,
            38255884, 38254386, 38245542, 38258240, 38258129, 38248900, 38255230, 38249404, 38252597, 38248681,
            38248292, 38255923, 38243949, 38249616, 38258015, 38251154, 38256620, 38253130, 38256392, 38251002,
            38255496, 38249664, 38257816, 38253425, 38242946, 38246226, 38231160, 38245198, 38256516, 38248617,
            38247767, 38249069, 38245935, 38237230, 38258381, 38228310, 38236128, 38232767, 38257637, 38255157,
            38255692, 38254866, 38254291, 38249730, 38257182, 38251500, 38256558, 38230161, 38229998, 38252360,
            38228320, 38236198, 38256166, 38249394, 38230532, 38246413, 38249527, 38247561, 38246668, 38250101,
            38256509, 38246032, 38229231, 38255001, 38253406, 38240333, 38247423, 38249130, 38255404, 38256707,
            38256694, 38246082, 38241674, 38248371, 38252492, 38247339, 38255056, 38238658, 38241235, 38245762,
            38258078, 38244473, 38226057, 38250372, 38241304, 38253414, 38232243, 38245240, 38255168, 38249820,
            38244927, 38230516, 38250404, 38257457, 38241583, 38250731, 38255892, 38255834, 38254719, 38250284,
            38256951, 38253825, 38226526, 38230141, 38239211, 38226743, 38251028, 38253699, 38238796, 38228788,
            38254040, 38249938, 38238180, 38236684, 38237696, 38229398, 38252565, 38247478, 38250602, 38252434,
            38226030, 38250382, 38224245, 38256399, 38251382, 38239728, 38239503, 38242343, 38244947, 38221552,
            38254589, 38240861, 38242105, 38226799, 38254080, 38230476, 38223019, 38239358, 38243060, 38253937,
            38231771, 38247788, 38238707, 38230325, 38253749, 38242086, 38226891, 38226833, 38227486, 38247543,
            38239585, 38253521, 38226340, 38233938, 38231670, 38253364, 38251715, 38235407, 38245100, 38251841,
            38249366, 38231704, 38225132, 38242992, 38250394, 38249204, 38223660, 38227324, 38251101, 38225172,
            38225150, 38228481, 38227544, 38242160, 38245665, 38243806, 38223822, 38228114, 38252233, 38240370,
            38234653, 38247363, 38249138, 38230453, 38222818, 38236607, 38235745, 38257000, 38237442, 38243341,
            38245187, 38240689, 38220336, 38247246, 38221379, 38251366, 38243230, 38251864, 38234383, 38248005,
            38221709, 38231901, 38224810, 38249316, 38253582, 38228592, 38235465, 38247305, 38236155, 38223555,
            38234387, 38234319, 38248291, 38234705, 38226589, 38227886, 38220288, 38224920, 38240421, 38240278,
            38222959, 38220892, 38235874, 38247357, 38222424, 38228074, 38221157, 38231151, 38239286, 38239266,
            38224033, 38226402, 38248077, 38225724, 38241237, 38249582, 38239735, 38240494, 38228122, 38239542,
            38230449, 38240175, 38249367, 38239252, 38239422, 38227437, 38222900, 38248705, 38234120, 38227428,
            38249194, 38240089, 38254258, 38238301, 38230316, 38255079, 38230730, 38242536, 38232998, 38240386,
            38239629, 38222909, 38224117, 38232378, 38234564, 38253146, 38232914, 38234580, 38226291, 38242233,
            38242518, 38240147, 38227451, 38239453, 38251076, 38240658, 38225121, 38231390, 38242758, 38239640,
            38233568, 38235102, 38223857, 38227565, 38222277, 38244289, 38222596, 38242510, 38243702, 38221996,
            38233157, 38220982, 38228039, 38228470, 38249755, 38240212, 38237472, 38226567, 38227112, 38229928,
            38234305, 38233905, 38257141, 38229041, 38243540, 38242445, 38231601, 38240221, 38230495, 38220607,
            38236512, 38237848, 38239776, 38224217, 38228672, 38247300, 38224950, 38232397, 38236857, 38247383,
            38224085, 38222014, 38232006, 38225019, 38232920, 38223771, 38222973, 38230750, 38235124, 38225285,
            38229001, 38231320, 38236689, 38234325, 38244532, 38237180, 38242980, 38228709, 38241697, 38252172,
            38231626, 38226404, 38232334, 38233812, 38228649, 38223028, 38240319, 38243125, 38240363, 38228033,
            38234326, 38230579, 38235615, 38221121, 38242586, 38230417, 38229576, 38235116, 38220200, 38232930,
            38241877, 38232438, 38226103, 38234057, 38234230, 38222490, 38237733, 38246624, 38224744, 38230008,
            38225640, 38225424, 38237366, 38254086, 38233820, 38229843, 38234716, 38233281, 38230904, 38236209,
            38222616, 38238123, 38238674, 38234896, 38225520, 38227329, 38223149, 38233902, 38242244, 38242718,
            38242664, 38234689, 38227168, 38225768, 38220713, 38244149, 38230626, 38231656, 38237730, 38229102,
            38221671, 38240821, 38238204, 38236168, 38252215, 38228861, 38244320, 38226199, 38227711, 38226430,
            38220444, 38228007, 38232572, 38239440, 38221370, 38230494, 38228556, 38223048, 38233934, 38253715,
            38227321, 38226609, 38220633, 38230120, 38228514, 38236519, 38244703, 38231564, 38235192, 38232234,
            38239896, 38231781, 38246439, 38234367, 38239036, 38229716, 38237287, 38228265, 38227582, 38237241,
            38231641, 38240402, 38226815, 38220917, 38229377, 38227043, 38222243, 38233193, 38238824, 38234473,
            38221051, 38234356, 38226217, 38233773, 38233953, 38228367, 38227921, 38232353, 38231740};

    @Test
    @DisplayName("hackerNewsTopStories method test")
    public void hackerNewsTopStories_shouldReturnLongArrayOfNumsFromJson() {
        assertThat(hackerNewsTopStories()).containsOnly(newsNums);
    }

    private static Stream<Arguments> newsForTest() {
        return Stream.of(
            Arguments.of(37570037L, "JDK 21 Release Notes"),
            Arguments.of(38233773L, "Installing OpenBSD on the Fastest iMac G3 [video]"),
            Arguments.of(38234689L, "A Rusty CHERI â€“ The path to hardware capabilities in Rust [video]"),
            Arguments.of(38250284L, "Connections with James Burke is back"),
            Arguments.of(38222909L, "The Unix timestamp will begin with 17 this Tuesday")
        );
    }

    @ParameterizedTest
    @MethodSource("newsForTest")
    @DisplayName("news method test")
    public void news_shouldReturnStringOfTitleOfNewsFromJson(long id, String title) {
        assertThat(news(id)).isEqualTo(title);
    }
}
